#!/usr/bin/env groovy
def gv

pipeline {
    agent any
    tools {
        maven 'Maven'
    }
    parameters {
        booleanParam(name: 'executeTests', defaultValue: true, description: "should execute tests")
    }
    stages {
        stage('increment application version') {
            steps {
                script {
                    echo "incrementing application version ..."
                    sh "mvn build-helper:parse-version versions:set \
                        -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.nextMinorVersion}.\\\${parsedVersion.nextIncrementalVersion} \
                        versions:commit"
                    def pom = new XmlSlurper().parseText(readFile('pom.xml'))
                    def version = pom.version.text()
                    env.IMAGE_NAME = "$version-$BUILD_NUMBER"
                }
            }
        }
        stage('init') {
            steps {
                script {
                    gv = load "./jenkins-params-build/script.groovy"
                }

            }
        }
        stage('test') {
            when {
                expression {
                    params.executeTests
                }
            }
            steps {
                script {
                    gv.testImage()
                }
            }
        }
        stage('build Docker Image') {
            steps {
                script {
                    gv.buildImage()
                }
            }
        }
        stage('deploy') {
            steps {
                script {
                    env.ENV = input message: "Select the environment to deploy to", ok: "Done", parameters: [choice(name: 'ONE', choices: ['dev', 'staging', 'prod'], description: '')]                    
                    gv.deployImage()
                    echo "Deploying to ${ENV}"
                }
            }
        }
        stage('commit version update') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'github-api-token', variable: 'api-token')]) {
                        sh 'git config user.email "jenkins@example.com"'
						sh 'git config user.name "jenkins"'

						sh 'git status'
						sh 'git branch'
						sh 'git config --list'

                        sh "git remote set-url origin https://${api-token}@github.com/TaskMasterErnest/java-maven-app"
                        sh 'git add .'
                        sh 'git commit -m "incremented the version and committed it back to repo"'
                        sh 'git push origin HEAD:jenkins-ci'
                    }
                }
            }
        }
    }
}